plugins {
    id "com.mkobit.jenkins.pipelines.shared-library" version "0.10.1"
    id 'java'
    id 'groovy'
}

sourceSets {
    main {
        groovy {
            srcDirs = ['src', 'vars']
        }
    }
    test {
        groovy {
            srcDirs = ['test']
        }
    }
}

sourceCompatibility = 1.8

project.buildDir = 'target'

repositories {
    mavenCentral()
    maven { url "https://repo.jenkins-ci.org/releases" }
    maven { url "https://repo.jenkins-ci.org/public" }
}

dependencies {
    // mandatory dependencies for using Spock
    // note: please use same Groovy version as on Jenkins
    compile "org.codehaus.groovy:groovy-all:2.4.12"
    implementation "com.cloudbees:groovy-cps:1.32@jar"
    implementation "org.jenkins-ci.main:jenkins-core:2.319.3"

    testImplementation "junit:junit:4.13.2"


    // TODO
    implementation "org.jenkins-ci.plugins:badge:1.8@jar"
    implementation "org.jenkins-ci.plugins:pipeline-maven:3.9.3@jar"
}

sharedLibrary {
    coreVersion = "2.319.3"
    testHarnessVersion = "1700.v6d3cd3101b_12"
    pluginDependencies {
        workflowCpsGlobalLibraryPluginVersion = "552.vd9cc05b8a2e1"
        dependency("org.jenkins-ci.plugins.workflow", "workflow-basic-steps", "2.24")
        dependency("org.jenkins-ci.plugins.workflow", "workflow-cps", "2648.va9433432b33c")
        dependency("org.jenkins-ci.plugins.workflow", "workflow-durable-task-step", "1121.va_65b_d2701486")
        dependency("org.jenkins-ci.plugins.workflow", "workflow-job", "1145.v7f2433caa07f")
        dependency("org.jenkins-ci.plugins.workflow", "workflow-support", "813.vb_d7c3d2984a_0")
        dependency("org.jenkins-ci.plugins.workflow", "workflow-aggregator", "2.6")
        dependency("org.jenkins-ci.plugins", "ansicolor", "1.0.1")
        dependency("org.jenkins-ci.plugins", "badge", "1.9.1")
    }
}

// this is needed for spock to find all the source code in the var directory
task copyGlobalLibVars (type: Copy) {
    from "$rootDir/vars"
    include '**/*.groovy'
    into "$buildDir/classes/vars"
}

compileTestGroovy {
    options.incremental = true
    options.fork        = true
    options.failOnError = false
}
compileTestGroovy.dependsOn copyGlobalLibVars

task printClasspath {
    doLast {
        configurations.testRuntimeClasspath.each { println it }
    }
}
